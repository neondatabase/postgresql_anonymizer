-- This test can't be runned inside a single transaction
-- because the FECTH statements need to be in their own transaction
CREATE EXTENSION anon;
SET anon.transparent_dynamic_masking TO TRUE;
CREATE TABLE t AS SELECT n FROM generate_series(1,100) n;
SECURITY LABEL FOR anon ON COLUMN t.n
  IS 'masked with VALUE 0';
CREATE ROLE dumper LOGIN;
security label for anon on role dumper
  is 'masked';
GRANT SELECT ON TABLE t TO dumper;
CREATE OR REPLACE FUNCTION reffunc(refcursor)
  RETURNS refcursor
AS '
BEGIN
    OPEN $1 FOR SELECT n FROM t;
    RETURN $1;
END;
'
LANGUAGE plpgsql;
-- need to be in a transaction to use cursors.
BEGIN;
  SELECT reffunc('funccursor');
  reffunc   
------------
 funccursor
(1 row)

  FETCH LAST IN funccursor;
  n  
-----
 100
(1 row)

ROLLBACK;
SET ROLE dumper;
SELECT n = 0
  FROM t
  ORDER BY n DESC
  LIMIT 1
;
 ?column? 
----------
 t
(1 row)

BEGIN;
  SAVEPOINT before_fetch;
  SELECT reffunc('funccursor');
  reffunc   
------------
 funccursor
(1 row)

  FETCH LAST IN funccursor;
ERROR:  Anon: role is masked
  ROLLBACK TO before_fetch;
ROLLBACK;
RESET ROLE;
DROP FUNCTION reffunc(refcursor);
DROP TABLE t;
REASSIGN OWNED BY dumper TO postgres;
DROP OWNED BY dumper;
DROP ROLE dumper;
DROP EXTENSION anon;
